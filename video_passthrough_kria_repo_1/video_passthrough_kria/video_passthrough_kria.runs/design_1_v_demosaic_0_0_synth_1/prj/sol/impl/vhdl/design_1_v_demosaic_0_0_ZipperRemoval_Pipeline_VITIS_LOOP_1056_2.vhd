-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1056_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgRgb_dout : IN STD_LOGIC_VECTOR (29 downto 0);
    imgRgb_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    imgRgb_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    imgRgb_empty_n : IN STD_LOGIC;
    imgRgb_read : OUT STD_LOGIC;
    imgUnzip_din : OUT STD_LOGIC_VECTOR (29 downto 0);
    imgUnzip_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    imgUnzip_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    imgUnzip_full_n : IN STD_LOGIC;
    imgUnzip_write : OUT STD_LOGIC;
    p_0_1_0_0_0932_lcssa950975 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0_0_0930_lcssa948973 : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_2_0_0_0934_lcssa946971 : IN STD_LOGIC_VECTOR (9 downto 0);
    conv2_i_i_lcssa969 : IN STD_LOGIC_VECTOR (9 downto 0);
    loopWidth : IN STD_LOGIC_VECTOR (16 downto 0);
    zext_ln1040 : IN STD_LOGIC_VECTOR (15 downto 0);
    rhs_V_2_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    rhs_V_2_out_ap_vld : OUT STD_LOGIC;
    rhs_V_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    rhs_V_out_ap_vld : OUT STD_LOGIC;
    rhs_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    rhs_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0483_1944_out : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0483_1944_out_ap_vld : OUT STD_LOGIC;
    p_0_0_0480942_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0480942_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0480942_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0481940_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0481940_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0481940_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0482938_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0482938_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0482938_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0483935_out_i : IN STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0483935_out_o : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_0_0_0483935_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of design_1_v_demosaic_0_0_ZipperRemoval_Pipeline_VITIS_LOOP_1056_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln1056_reg_703 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1062_reg_707 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op41_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal icmp_ln1114_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1114_reg_711_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln1056_fu_207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal imgRgb_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal imgUnzip_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1056_reg_703_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1062_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1114_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1114_reg_711_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal rhs_1_reg_715 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_1_reg_715_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_2_reg_723 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_2_reg_723_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_4_reg_731 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_4_reg_731_pp0_iter2_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln1027_fu_404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_739 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_reg_744 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_1_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1031_1_reg_749 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_1_reg_754 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_reg_759 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_V_reg_764 : STD_LOGIC_VECTOR (9 downto 0);
    signal b_V_reg_769 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal x_fu_106 : STD_LOGIC_VECTOR (16 downto 0);
    signal x_2_fu_213_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_1 : STD_LOGIC_VECTOR (16 downto 0);
    signal rhs_fu_110 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_fu_114 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1064_fu_245_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal rhs_V_1_fu_118 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_0_0483_1944_fu_122 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1087_fu_400_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1040_cast_fu_175_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1_fu_312_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln1084_1_fu_326_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln1084_2_fu_340_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln1084_1_fu_354_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln1084_fu_322_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1084_1_fu_364_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1084_fu_368_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1084_2_fu_374_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1084_3_fu_336_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln1084_1_fu_378_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1084_4_fu_350_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lum_fu_384_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal op_assign_fu_390_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_6_fu_428_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_1_fu_435_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_3_fu_443_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1495_fu_447_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_5_fu_453_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1495_fu_439_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_fu_457_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_7_fu_473_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_6_fu_480_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_7_fu_488_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1495_2_fu_492_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_8_fu_498_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1495_2_fu_484_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_3_fu_502_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_8_fu_518_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_9_fu_525_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_10_fu_533_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1495_4_fu_537_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln1495_11_fu_543_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1495_4_fu_529_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_5_fu_547_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln1031_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1031_1_fu_599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1099_fu_594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln1099_1_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1099_fu_609_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1099_2_fu_627_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1099_fu_615_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln1099_1_fu_621_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_514 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component design_1_v_demosaic_0_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component design_1_v_demosaic_0_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    p_0_0_0483_1944_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    p_0_0_0483_1944_fu_122 <= conv2_i_i_lcssa969;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
                    p_0_0_0483_1944_fu_122 <= zext_ln1087_fu_400_p1;
                end if;
            end if; 
        end if;
    end process;

    rhs_V_1_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    rhs_V_1_fu_118 <= p_0_1_0_0_0932_lcssa950975;
                elsif ((ap_const_boolean_1 = ap_condition_514)) then 
                    rhs_V_1_fu_118 <= imgRgb_dout(19 downto 10);
                end if;
            end if; 
        end if;
    end process;

    rhs_V_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    rhs_V_fu_114 <= p_0_0_0_0_0930_lcssa948973;
                elsif ((ap_const_boolean_1 = ap_condition_514)) then 
                    rhs_V_fu_114 <= trunc_ln1064_fu_245_p1;
                end if;
            end if; 
        end if;
    end process;

    rhs_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    rhs_fu_110 <= p_0_2_0_0_0934_lcssa946971;
                elsif ((ap_const_boolean_1 = ap_condition_514)) then 
                    rhs_fu_110 <= imgRgb_dout(29 downto 20);
                end if;
            end if; 
        end if;
    end process;

    x_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln1056_fu_207_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    x_fu_106 <= x_2_fu_213_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_106 <= ap_const_lv17_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln1056_reg_703 <= icmp_ln1056_fu_207_p2;
                icmp_ln1056_reg_703_pp0_iter1_reg <= icmp_ln1056_reg_703;
                icmp_ln1114_reg_711_pp0_iter1_reg <= icmp_ln1114_reg_711;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then
                b_V_reg_769 <= ret_V_5_fu_547_p2(11 downto 2);
                g_V_reg_764 <= ret_V_3_fu_502_p2(11 downto 2);
                icmp_ln1027_1_reg_754 <= icmp_ln1027_1_fu_422_p2;
                icmp_ln1027_reg_739 <= icmp_ln1027_fu_404_p2;
                icmp_ln1031_1_reg_749 <= icmp_ln1031_1_fu_416_p2;
                icmp_ln1031_reg_744 <= icmp_ln1031_fu_410_p2;
                r_V_reg_759 <= ret_V_fu_457_p2(11 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1056_fu_207_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1062_reg_707 <= icmp_ln1062_fu_219_p2;
                icmp_ln1114_reg_711 <= icmp_ln1114_fu_225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln1114_reg_711_pp0_iter2_reg <= icmp_ln1114_reg_711_pp0_iter1_reg;
                rhs_1_reg_715_pp0_iter2_reg <= rhs_1_reg_715;
                rhs_V_2_reg_723_pp0_iter2_reg <= rhs_V_2_reg_723;
                rhs_V_4_reg_731_pp0_iter2_reg <= rhs_V_4_reg_731;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                rhs_1_reg_715 <= rhs_fu_110;
                rhs_V_2_reg_723 <= rhs_V_fu_114;
                rhs_V_4_reg_731 <= rhs_V_1_fu_118;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1084_1_fu_378_p2 <= std_logic_vector(unsigned(zext_ln1084_2_fu_374_p1) + unsigned(zext_ln1084_3_fu_336_p1));
    add_ln1084_fu_368_p2 <= std_logic_vector(unsigned(zext_ln1084_fu_322_p1) + unsigned(zext_ln1084_1_fu_364_p1));
    add_ln1495_2_fu_492_p2 <= std_logic_vector(unsigned(zext_ln1495_6_fu_480_p1) + unsigned(zext_ln1495_7_fu_488_p1));
    add_ln1495_4_fu_537_p2 <= std_logic_vector(unsigned(zext_ln1495_9_fu_525_p1) + unsigned(zext_ln1495_10_fu_533_p1));
    add_ln1495_fu_447_p2 <= std_logic_vector(unsigned(zext_ln1495_1_fu_435_p1) + unsigned(zext_ln1495_3_fu_443_p1));
    and_ln1099_1_fu_604_p2 <= (xor_ln1031_1_fu_599_p2 and icmp_ln1027_1_reg_754);
    and_ln1099_fu_594_p2 <= (xor_ln1031_fu_589_p2 and icmp_ln1027_reg_739);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, imgRgb_empty_n, ap_predicate_op41_read_state2, imgUnzip_full_n, icmp_ln1114_reg_711_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_01001 <= (((icmp_ln1114_reg_711_pp0_iter2_reg = ap_const_lv1_0) and (imgUnzip_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (imgRgb_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, imgRgb_empty_n, ap_predicate_op41_read_state2, imgUnzip_full_n, icmp_ln1114_reg_711_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((icmp_ln1114_reg_711_pp0_iter2_reg = ap_const_lv1_0) and (imgUnzip_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (imgRgb_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, imgRgb_empty_n, ap_predicate_op41_read_state2, imgUnzip_full_n, icmp_ln1114_reg_711_pp0_iter2_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((icmp_ln1114_reg_711_pp0_iter2_reg = ap_const_lv1_0) and (imgUnzip_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (imgRgb_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(imgRgb_empty_n, ap_predicate_op41_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (imgRgb_empty_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_pp0_stage0_iter3_assign_proc : process(imgUnzip_full_n, icmp_ln1114_reg_711_pp0_iter2_reg)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((icmp_ln1114_reg_711_pp0_iter2_reg = ap_const_lv1_0) and (imgUnzip_full_n = ap_const_logic_0));
    end process;


    ap_condition_514_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln1056_reg_703, icmp_ln1062_reg_707)
    begin
                ap_condition_514 <= ((icmp_ln1062_reg_707 = ap_const_lv1_1) and (icmp_ln1056_reg_703 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln1056_fu_207_p2)
    begin
        if (((icmp_ln1056_fu_207_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_subdone, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op41_read_state2_assign_proc : process(icmp_ln1056_reg_703, icmp_ln1062_reg_707)
    begin
                ap_predicate_op41_read_state2 <= ((icmp_ln1062_reg_707 = ap_const_lv1_1) and (icmp_ln1056_reg_703 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_106, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_1 <= ap_const_lv17_0;
        else 
            ap_sig_allocacmp_x_1 <= x_fu_106;
        end if; 
    end process;

    icmp_ln1027_1_fu_422_p2 <= "1" when (unsigned(p_0_0_0483_1944_fu_122) < unsigned(zext_ln1087_fu_400_p1)) else "0";
    icmp_ln1027_fu_404_p2 <= "1" when (unsigned(p_0_0_0483935_out_i) < unsigned(p_0_0_0483_1944_fu_122)) else "0";
    icmp_ln1031_1_fu_416_p2 <= "1" when (unsigned(p_0_0_0483935_out_i) < unsigned(p_0_0_0483_1944_fu_122)) else "0";
    icmp_ln1031_fu_410_p2 <= "1" when (unsigned(p_0_0_0483_1944_fu_122) < unsigned(zext_ln1087_fu_400_p1)) else "0";
    icmp_ln1056_fu_207_p2 <= "1" when (ap_sig_allocacmp_x_1 = loopWidth) else "0";
    icmp_ln1062_fu_219_p2 <= "1" when (unsigned(ap_sig_allocacmp_x_1) < unsigned(zext_ln1040_cast_fu_175_p1)) else "0";
    icmp_ln1114_fu_225_p2 <= "1" when (ap_sig_allocacmp_x_1 = ap_const_lv17_0) else "0";

    imgRgb_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, imgRgb_empty_n, ap_predicate_op41_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op41_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            imgRgb_blk_n <= imgRgb_empty_n;
        else 
            imgRgb_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgRgb_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op41_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op41_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            imgRgb_read <= ap_const_logic_1;
        else 
            imgRgb_read <= ap_const_logic_0;
        end if; 
    end process;


    imgUnzip_blk_n_assign_proc : process(ap_enable_reg_pp0_iter3, imgUnzip_full_n, icmp_ln1114_reg_711_pp0_iter2_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1114_reg_711_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            imgUnzip_blk_n <= imgUnzip_full_n;
        else 
            imgUnzip_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgUnzip_din <= ((select_ln1099_2_fu_627_p3 & select_ln1099_fu_615_p3) & select_ln1099_1_fu_621_p3);

    imgUnzip_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln1114_reg_711_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1114_reg_711_pp0_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            imgUnzip_write <= ap_const_logic_1;
        else 
            imgUnzip_write <= ap_const_logic_0;
        end if; 
    end process;

    lshr_ln1084_1_fu_326_p4 <= rhs_V_fu_114(9 downto 1);
    lshr_ln1084_2_fu_340_p4 <= rhs_V_fu_114(9 downto 3);
    lum_fu_384_p2 <= std_logic_vector(unsigned(add_ln1084_1_fu_378_p2) + unsigned(zext_ln1084_4_fu_350_p1));
    op_assign_fu_390_p4 <= lum_fu_384_p2(9 downto 3);
    or_ln1099_fu_609_p2 <= (and_ln1099_fu_594_p2 or and_ln1099_1_fu_604_p2);

    p_0_0_0480942_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, p_0_0_0480942_out_i, ap_block_pp0_stage0, icmp_ln1056_reg_703_pp0_iter1_reg, rhs_V_4_reg_731)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
            p_0_0_0480942_out_o <= rhs_V_4_reg_731;
        else 
            p_0_0_0480942_out_o <= p_0_0_0480942_out_i;
        end if; 
    end process;


    p_0_0_0480942_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
            p_0_0_0480942_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0480942_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0481940_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, p_0_0_0481940_out_i, ap_block_pp0_stage0, icmp_ln1056_reg_703_pp0_iter1_reg, rhs_V_2_reg_723)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
            p_0_0_0481940_out_o <= rhs_V_2_reg_723;
        else 
            p_0_0_0481940_out_o <= p_0_0_0481940_out_i;
        end if; 
    end process;


    p_0_0_0481940_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
            p_0_0_0481940_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0481940_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0482938_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, p_0_0_0482938_out_i, ap_block_pp0_stage0, icmp_ln1056_reg_703_pp0_iter1_reg, rhs_1_reg_715)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
            p_0_0_0482938_out_o <= rhs_1_reg_715;
        else 
            p_0_0_0482938_out_o <= p_0_0_0482938_out_i;
        end if; 
    end process;


    p_0_0_0482938_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
            p_0_0_0482938_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0482938_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0483935_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, p_0_0_0483935_out_i, ap_block_pp0_stage0, icmp_ln1056_reg_703_pp0_iter1_reg, p_0_0_0483_1944_fu_122)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
            p_0_0_0483935_out_o <= p_0_0_0483_1944_fu_122;
        else 
            p_0_0_0483935_out_o <= p_0_0_0483935_out_i;
        end if; 
    end process;


    p_0_0_0483935_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_0))) then 
            p_0_0_0483935_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0483935_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_0_0483_1944_out <= p_0_0_0483_1944_fu_122;

    p_0_0_0483_1944_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_1))) then 
            p_0_0_0483_1944_out_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0483_1944_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_3_fu_502_p2 <= std_logic_vector(unsigned(zext_ln1495_8_fu_498_p1) + unsigned(zext_ln1495_2_fu_484_p1));
    ret_V_5_fu_547_p2 <= std_logic_vector(unsigned(zext_ln1495_11_fu_543_p1) + unsigned(zext_ln1495_4_fu_529_p1));
    ret_V_6_fu_428_p3 <= (rhs_1_reg_715 & ap_const_lv1_0);
    ret_V_7_fu_473_p3 <= (rhs_V_2_reg_723 & ap_const_lv1_0);
    ret_V_8_fu_518_p3 <= (rhs_V_4_reg_731 & ap_const_lv1_0);
    ret_V_fu_457_p2 <= std_logic_vector(unsigned(zext_ln1495_5_fu_453_p1) + unsigned(zext_ln1495_fu_439_p1));
    rhs_V_2_out <= rhs_V_4_reg_731;

    rhs_V_2_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_1))) then 
            rhs_V_2_out_ap_vld <= ap_const_logic_1;
        else 
            rhs_V_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rhs_V_out <= rhs_V_2_reg_723;

    rhs_V_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_1))) then 
            rhs_V_out_ap_vld <= ap_const_logic_1;
        else 
            rhs_V_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    rhs_out <= rhs_1_reg_715;

    rhs_out_ap_vld_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln1056_reg_703_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1056_reg_703_pp0_iter1_reg = ap_const_lv1_1))) then 
            rhs_out_ap_vld <= ap_const_logic_1;
        else 
            rhs_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln1099_1_fu_621_p3 <= 
        g_V_reg_764 when (or_ln1099_fu_609_p2(0) = '1') else 
        rhs_V_2_reg_723_pp0_iter2_reg;
    select_ln1099_2_fu_627_p3 <= 
        r_V_reg_759 when (or_ln1099_fu_609_p2(0) = '1') else 
        rhs_1_reg_715_pp0_iter2_reg;
    select_ln1099_fu_615_p3 <= 
        b_V_reg_769 when (or_ln1099_fu_609_p2(0) = '1') else 
        rhs_V_4_reg_731_pp0_iter2_reg;
    trunc_ln1064_fu_245_p1 <= imgRgb_dout(10 - 1 downto 0);
    trunc_ln1084_1_fu_354_p4 <= rhs_V_1_fu_118(9 downto 3);
    trunc_ln1_fu_312_p4 <= rhs_fu_110(9 downto 2);
    x_2_fu_213_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_1) + unsigned(ap_const_lv17_1));
    xor_ln1031_1_fu_599_p2 <= (icmp_ln1031_1_reg_749 xor ap_const_lv1_1);
    xor_ln1031_fu_589_p2 <= (icmp_ln1031_reg_744 xor ap_const_lv1_1);
    zext_ln1040_cast_fu_175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln1040),17));
    zext_ln1084_1_fu_364_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1084_1_fu_354_p4),9));
    zext_ln1084_2_fu_374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1084_fu_368_p2),10));
    zext_ln1084_3_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1084_1_fu_326_p4),10));
    zext_ln1084_4_fu_350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln1084_2_fu_340_p4),10));
    zext_ln1084_fu_322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1_fu_312_p4),9));
    zext_ln1087_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op_assign_fu_390_p4),10));
    zext_ln1495_10_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0480942_out_i),11));
    zext_ln1495_11_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1495_4_fu_537_p2),12));
    zext_ln1495_1_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_fu_110),11));
    zext_ln1495_2_fu_484_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_7_fu_473_p3),12));
    zext_ln1495_3_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0482938_out_i),11));
    zext_ln1495_4_fu_529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_8_fu_518_p3),12));
    zext_ln1495_5_fu_453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1495_fu_447_p2),12));
    zext_ln1495_6_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_fu_114),11));
    zext_ln1495_7_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0_0_0481940_out_i),11));
    zext_ln1495_8_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1495_2_fu_492_p2),12));
    zext_ln1495_9_fu_525_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_1_fu_118),11));
    zext_ln1495_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_6_fu_428_p3),12));
end behav;
